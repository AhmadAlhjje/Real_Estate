// components/PropertyList.jsx
import React, { useState, useEffect } from "react";
import { FaEdit, FaRegTrashAlt } from "react-icons/fa";
import "./PropertyList.css";
import { fetchUserProperties, deleteProperty } from "../../api/RealeStateApi"; // ุงุณุชูุฑุงุฏ ุงูุฏูุงู ุงูุฌุฏูุฏุฉ
import { getUserIdFromToken } from "../../api/api";

const PropertyList = () => {
  const [properties, setProperties] = useState([]); // ูุชุฎุฒูู ุจูุงูุงุช ุงูุนูุงุฑุงุช
  const [loading, setLoading] = useState(true); // ูุชุญุฏูุฏ ุญุงูุฉ ุงูุชุญููู
  const [error, setError] = useState(null); // ูุชุฎุฒูู ุฑุณุงูุฉ ุงูุฎุทุฃ

  // ุฏุงูุฉ ูุฌูุจ ุจูุงูุงุช ุงูุนูุงุฑุงุช ุนูุฏ ุชุญููู ุงููููู
  useEffect(() => {
    const fetchProperties = async () => {
      try {
        const userId = getUserIdFromToken(); // ุงุณุชุฎุฑุงุฌ ูุนุฑูู ุงููุณุชุฎุฏู ูู ุงูุชููู
        if (!userId) {
          setError("ูุฌุจ ุชุณุฌูู ุงูุฏุฎูู ุฃููุงู.");
          setLoading(false);
          return;
        }

        const data = await fetchUserProperties(userId); // ุฌูุจ ุงูุนูุงุฑุงุช ุงูุฎุงุตุฉ ุจุงููุณุชุฎุฏู
        setProperties(data);
      } catch (err) {
        setError(err.message || "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุจูุงูุงุช ุงูุนูุงุฑุงุช.");
      } finally {
        setLoading(false);
      }
    };
    fetchProperties();
  }, []);

  // ุฏุงูุฉ ุญุฐู ุงูุนูุงุฑ
  const handleDelete = async (id) => {
    try {
      if (window.confirm("ูู ุฃูุช ูุชุฃูุฏ ูู ุฃูู ุชุฑูุฏ ุญุฐู ูุฐุง ุงูุนูุงุฑุ")) {
        await deleteProperty(id); // ุงุณุชุฏุนุงุก ุฏุงูุฉ ุงูุญุฐู ูู API
        setProperties(properties.filter((property) => property.id !== id)); // ุชุญุฏูุซ ุงููุงุฆูุฉ ุจุนุฏ ุงูุญุฐู
      }
    } catch (err) {
      setError(err.message || "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุญุฐู ุงูุนูุงุฑ.");
    }
  };

  // ุนุฑุถ ูุคุดุฑ ุงูุชุญููู ุฅุฐุง ูุงูุช ุงูุจูุงูุงุช ููุฏ ุงูุชุญููู
  if (loading) {
    return <p className="no-content">ุฌุงุฑู ุงูุชุญููู...</p>;
  }

  // ุนุฑุถ ุฑุณุงูุฉ ุงูุฎุทุฃ ุฅุฐุง ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุงูุจูุงูุงุช
  if (error) {
    return <p className="no-content text-danger">{error}</p>;
  }

  // ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ุนูุงุฑุงุช
  if (properties.length === 0) {
    return <p className="no-content">ูุง ุชูุฌุฏ ุนูุงุฑุงุช ูุถุงูุฉ ุจุนุฏ.</p>;
  }

  return (
    <div className="property-list">
      {properties.map((property) => (
        <div key={property.id} className="property-card">
          <img src={JSON.parse(property.images)[0]} alt={property.title} className="property-image" />
          <div className="property-details">
            <h5>{property.title}</h5>
            <p>๐ {property.city}</p>
            <p>๐ฐ {parseFloat(property.price).toLocaleString()} $</p>
            <p>๐ {property.rooms} ุบุฑู | ๐ฟ {property.bathrooms} ุญูุงูุงุช</p>
            <p>๐ {new Date(property.addedDate).toLocaleDateString()}</p>
          </div>
          <div className="property-actions">
            <button className="edit-btn">
              <FaEdit /> {/* ุฅุถุงูุฉ ุฃููููุฉ ุงูููู */}
            </button>
            <button className="delete-btn" onClick={() => handleDelete(property.id)}>
              <FaRegTrashAlt /> {/* ุฅุถุงูุฉ ุฃููููุฉ ุณูุฉ ุงูููููุงุช */}
            </button>
          </div>
        </div>
      ))}
    </div>
  );
};

export default PropertyList;